server:
  port: 9000
spring:
  application:
    name: "cards"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3309/cardsdb
    username: root
    password: root
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
    # "configserver" is fixed prefix which tells Spring Boot to use Spring Cloud Config Server
    # it doesn't have anything to do with the class name or whatsoever.
    # "optional" keyword is to indicate that if it's not able to connect with the configserver,
    # it can still continue to start the microservices application. If we have a scenario where
    # the properties is very important to our microservices and without them, our microservices
    # is not going to work, then we're not supposed to use the "optional" keyword
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

management:
  endpoints:
    web:
      exposure:
        include: "*"
