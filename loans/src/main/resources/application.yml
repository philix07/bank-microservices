server:
  port: 8090
spring:
  application:
    name: "loans"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3308/loansdb
    username: root
    password: root
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
    # "configserver" is fixed prefix which tells Spring Boot to use Spring Cloud Config Server
    # it doesn't have anything to do with the class name or whatsoever.
    # "optional" keyword is to indicate that if it's not able to connect with the configserver,
    # it can still continue to start the microservices application. If we have a scenario where
    # the properties is very important to our microservices and without them, our microservices
    # is not going to work, then we're not supposed to use the "optional" keyword
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  # enable details information about "readiness-state" and "liveness-state"
  health:
    liveness-state:
      enabled: true
    readiness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  # enabling environment related information
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      
endpoints:
  shutdown:
    access: unrestricted

eureka:
  instance:
    preferIpAddress: true # Use IP address instead of hostname for registration
  client:
    # "fetchRegistry" and "registerWithEureka" are typically set to true
    # when the application is a client of Eureka server.
    # Download the list of services from Eureka
    # (i.e., it's Eureka client that wants to discover other services).
    fetchRegistry: true
    # Register this service with Eureka
    # (i.e., making itself discoverable).
    registerWithEureka: true
    # Specifies the URL where Eureka clients would normally
    # connect to register or fetch services.
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

# metadata displayed on the Eureka dashboard
info:
  app:
    name: "loans"
    description: "Mini Bank Loans Application"
    version: "1.0.0"

logging:
  level:
    com:
      felix:
        loans: DEBUG
